{
	 // Where should clang search for headers
	 // These will be appended to build with `-I` flag each
	"include_dirs" : [
						"/usr/include",
						"$project_base_path/src",
						"/workspace/$project_name/src",
						],

	// set the standard library flag.
	"std_flag" : "-std=c++11",

	"flags" : [],
	// search for .clang_complete file up the tree. Use includes from it if found
	"search_clang_complete_file": true,

	// show compile errors on save
	"errors_on_save": true,

	// triggers for auto-completion
	"triggers" : [ ".", "->", "::"],

	// use libclang. If set to false will use clang_binary and parse the output of
	// `clang_binary -Xclang -code-complete-at...` instead.
	"use_libclang" : true,

	// make plugin verbose
	"verbose" : false,

	// add folder with current file with `-I` flag
	"include_file_folder" : true,

	// add parent folder of the current file's one with `-I` flag
	"include_file_parent_folder" : true,

	// pick the clang binary used by the plugin. This is used to determine the
	// version of the plugin and pick correct libclang bindings.
	"clang_binary" : "clang++",

	// ignore triggers and try to complete after each character
	// WARNING: can be very slow
	"autocomplete_all" : false,

	// override all clang flags by project-specific settings defined under
	// `settings`->`clang_flags` in `*.sublime-project` file
	"use_project_specific_settings": false,

	// hide the completions generated by other plugins
	"hide_default_completions": false,
}
